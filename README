
    Programul este bine structurat, comenzile din fisierele de teste sunt citite in
clasa de baza Main, apoi, in functie de tipul comenzii se alege care metoda va fi accesata din
clasa CommandRunner - care contine toate comenzile posibil de procesat.
    CommandRunner functioneaza ca o clasa "intermediara", apeland la randul sau alte metode din
clasele NormalUser, Artist, Host sau Admin, in dependente deja ce comanda carui tip de
utiliazator e specifica (sau adminului).
    Utilizatorul poate sa utilizeze asa comenzi ca: Search, Select, Load, Like, Play, Pause,
Repeat, Shuffle, Forward/Backward, AddPlaylist, AddRemoveInPlaylist, comenzi pentru diferite
statistici, etc. Comenzile pot fi aplicate cantecelor, podcasturilor, playlisturilor si albumelor.

Pentru efectuarea acestui proiect am folosit:
  -  Mostenirea claselor. De exemplu in package-ul "users" unde am implementat clasa User si am
     extins clasa in toate clasele din package-ul interior "userTypes".
  -  Constructia de clase abstracte. De exemplu in package-ul "pageSystem" clasa BasePage
     e abstracta din cauza ca nu am avut nevoie sa o instantiez, am dorit sa pastrez in ea
     o metoda abstracta. Aceasta clasa a fost apoi extinsa.
  -  Folosirea design patternului Singleton. Acesta a fost adaugat pentru clasele LibraryInput
     si Admin pentru ca am vrut acces global la instanta unica a acestor clase si un singur
     punct de gestionare pentru functionalitatile aplicatiei.
  -  Folosirea stream() API, clasei DateTimeFormatter
